第二章

程序是为执行一项任务而编写的有序指令集
算法是解决问题的具体方法和步骤
流程图是算法的图形化表现形式
C语言的特点
C程序的编译和运行过程
编译器将源程序转换成机器能理解的程序
连接器用于连接相关的目标文件以生成可执行程序


目标

理解变量和常量的含义
熟悉基本数据类型 - int、char、float 和 double
使用算术运算符
理解类型转换
熟练使用 scanf() 和 printf() 函数
熟练使用 getchar() 和 putchar() 函数


2.1.1 声明变量


声明变量：
Datatype variablename;

变量的命名规则：
变量名可以由字母、数字和 _（下划线）组合而成
变量名不能包含除 _ 以外的任何特殊字符，如：%、# 、逗号、空格等
变量名必须以字母或 _（下划线）开头
变量名不能包含空白字符（换行符、空格和制表符称为空白字符）
C 语言中的某些词（例如 int 和 float 等）称为保留字，具有特殊意义，不能用作变量名
C 语言区分大小写，因此变量 price 与变量 PRICE 是两个不同的变量

2.1.2 变量命名

变量初始化
定义时初始化变量
Datatype variablename = value;

定义后初始化变量
variablename = value;

通过运算赋值

2.2 基本数据类型
数据类型
数值	  整型  int   short int   long int
			非整型  float  double

非数值	 char


int一直是机器字长= sizeof(int)
在32位系统中  Long  int = int = 32bit   short   int   = 16bit  unsigned long = 32bit
在16位系统中    short   int = int = 16bit   long   int =  32bit  总之:   short   int = 16bit   long   int   = 32bit   

引申：
1、如何求取机器字长
(1)
Sizeof(int)
(2)
Int count=0;
While(~0 >>1) 
	count++;


 声明：
int page_number;
long int population;
unsigned int age;
可按如下方式初始化：
page_number＝0;
int max_marks = 100;


单精度浮点数在机内占4个字节，用32位二进制描述。 双精度浮点数在机内占8个字节，用64位二进制描述。 浮点数在机内用指数型式表示，分解为：数符，尾数，指数符，指数四部分。 数符占1位二进制，表示数的正负。 指数符占1位二进制，表示指数的正负。 尾数表示浮点数有效数字，0.xxxxxxx,但不存开头的0和点 指数存指数的有效数字。 指数占多少位，尾数占多少位，由计算机系统决定。 可能是数符加尾数占24位，指数符加指数占8位 -- float. 数符加尾数占48位，指数符加指数占16位 -- double. 

float 共计32位，折合4字节 由最高到最低位分别是第31、30、29、……、0位 31位是符号位，1表示该数为负，0反之。 30-23位，一共8位是指数位。 22-0位，一共23位是尾数位。 每8位分为一组，分成4组，分别是A组、B组、C组、D组。 每一组是一个字节，在内存中逆序存储，即：DCBA 



2.2.4 字符型
值			符号
48 ~ 57   0 ~ 9 
97 ~ 122  a ~ z
65 ~ 90  A~Z




2.4.1 转义序列

换行符（\n）使活跃位置跳到下一行的开端。
回车符 （ \r ） 使活跃位置返回当前行的开端。
水平制表符（\t）使活跃位置移动若干个位置（通常是8个）。
垂直制表符（\v）使活跃位置换若干行。注：\v可用于控制打印机换若干行，但是不会导致PC机的显示屏换行。 
