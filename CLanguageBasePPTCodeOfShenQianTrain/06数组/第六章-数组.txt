第六章　  数组

目标 
理解为什么要使用数组
理解 C 语言中数组
熟练掌握一维数组的使用
掌握二维数组的使用
熟悉用数组实现常用的算法 


C 语言中的数组

数组是可以在内存中连续存储多个元素的结构
数组中的所有元素必须属于相同的数据类型


Rate      [ 4 ]
    |           |
数组名  数组大小

 下标标明了元素在数组中的位置 (从0开始)


###声明一维数组

datatype arrayName[size];


datatype：
	类型说明符
	int、char、float  …

arrayName：
	数组名


size：
	常量表达式：	数组大小


例如：
	int num[50];
	char list_of_initials[20];
	double pressure_level[6];

	# define LIMIT 20
	. . . 
	int emp_codes[LIMIT];
	
其他的初始化情况：
int arr[10] = {10,9,8,7,6,5,4,3,2,1,0};  //错误！越界了 
int arr[10] = {9,8,7,5}; //正确，后面的6个元素未初始化 
int arr[] = {9,8,7};  //正确：元素个数为 3 
int arr[]={};  //错误，到底是几个元素？ 


#总结
数组是可以在内存中连续存储多个元素的结构，数组中的所有元素必须属于相同的数据类型
数组必须先声明，然后才能使用。声明一个数组只是为该数组留出内存空间，并不会为其赋任何值
数组的元素通过数组下标访问
一维数组可用一个循环动态初始化，而二维数组可用嵌套循环动态初始化
二维数组可以看作是由一维数组的嵌套而构成的





















































